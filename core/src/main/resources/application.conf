fcm {
  key-file = "/Users/hmchang/Downloads/fcm.json"
  key-file = ${?FCM_KEY_FILE}
}

pekko {

  logger-startup-timeout = 30s

  actor {
    # Set this to on to enable serialization-bindings defined in
    # additional-serialization-bindings. Those are by default not included
    # for backwards compatibility reasons. They are enabled by default if
    # akka.remote.artery.enabled=on.
    enable-additional-serialization-bindings = on

    allow-java-serialization = off
  }

  persistence {
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    host = ${?MYSQL_HOST}
    url = "jdbc:mysql://"${?MYSQL_HOST}":"${?MYSQL_PORT}"/"${?MYSQL_JOURNAL_DB}"?cachePrepStmts=true&cacheCallableStmts=true&cacheServerConfiguration=true&useLocalSessionState=true&elideSetAutoCommits=true&alwaysSendSetIsolation=false&enableQueryTimeouts=false&connectionAttributes=none&verifyServerCertificate=false&useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=UTC&rewriteBatchedStatements=true"
    user = ${?MYSQL_USER}
    password = ${?MYSQL_PASSWORD}
    driver = "com.mysql.cj.jdbc.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}

pekko-http-cors {
  allow-generic-http-requests = yes
  allow-credentials = yes
  allowed-origins = "*"
  allowed-headers = "*"
  allowed-methods = ["GET", "POST", "HEAD", "OPTIONS", "PUT", "DELETE"]
  exposed-headers = []
  max-age = 1800 seconds
}
logger.scala.slick=INFO

app {
  corsDomains = ""
  corsDomains = ${?CORS_DOMAINS}
}